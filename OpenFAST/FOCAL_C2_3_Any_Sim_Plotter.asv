%% Plot SS Results Against Full Simulation Results
close all; clear all; clc;

home_dir = 'C:\Umaine Google Sync\GitHub\FOCAL-C2-Linearization\OpenFAST';
cd(home_dir);

% Define time offset if .ssexctn files used
tc = struct();
    tc.OpenFAST = 0;
    tc.Simulink = 29.975;
    tc.Experiment = 0;
    tc.Observer = 0;

%% --------------- User Inputs ---------------- %%
% Comparison flag (1: OpenFAST | 2: Simulink | 3: Experimental | 4: Simulink Observer)
type = [2,3,4];
plot_mark = {'none','none','none'};
simulation = 'Test_01';
xrange = [100 500];

% Descriptions
desc = {'Baseline_SS';
        'Experiment';
        'Observer'};


cd(sprintf('Simulations/%s',simulation));
for i = 1:length(type)
    t = type(i);

    switch t
        case 1 % OpenFAST Non-Linear Simulation Results
            load('OpenFAST_Results.mat');
            sim_results.Time = sim_results.Time-tc.OpenFAST;  
            sim_results = renameStructField(sim_results,'T_3_','FAIRTEN3');
            full_results{i} = sim_results;
            clear sim_results;

        case 2 % Simulink State Space Simulation
            load('Simulink_Results.mat');
            slx_results.Time = slx_results.Time-tc.Simulink;
            full_results{i} = slx_results;
            clear slx_results;

        case 3 % Experimental Results
            load('Test_Results.mat')
            test_results.Time = test_results.Time - tc.Experiment;
            test_results = renameStructField(test_results,'T_1_','FAIRTEN1');
            test_results = renameStructField(test_results,'T_2_','FAIRTEN2');
            test_results = renameStructField(test_results,'T_3_','FAIRTEN3');
            test_results = renameStructField(test_results,'TwrBsAx','PtfmTAxt');
            test_results = renameStructField(test_results,'TwrBsAz','PtfmTAzt');
            full_results{i} = test_results;
            clear test_results

        case 4 % Simulink with Observer
            load('SimulinkObserver_Results.mat');
            slx_obs_results.Time = slx_obs_results.Time - tc.Observer
            
            full_results{i} = slx_obs_results;
            clear slx_obs_results
    end
end

% % Scale the experimental results
% exp_res = full_results{2};
% t = exp_res.Time;
% tmax_old = max(t);
% tmax_new = tmax_old*1;
% dt = max(t)/length(t);
% tnew = linspace(0,tmax_new,length(t))';
% exp_res.Time = tnew;
% full_results{2} = exp_res;

% Variable to plot
varnames = {'Surge [m]';
            'Sway [m]';
            'Heave [m]';
            'Roll [deg]';
            'Pitch [deg]'};

vars = {'PtfmRoll','PtfmPitch','TwrBsMyt','TwrBsMxt','FAIRTEN1','FAIRTEN2','FAIRTEN3'};
gain = [1,1];

for i = 1:length(type)
    plotvar.(desc{i}).Time = full_results{i}.Time;
    for j = 1:length(vars)
        vals = full_results{i}.(vars{j});
        plotvar.(desc{i}).(vars{j}) = vals - mean(vals);
    end
end

%% -------------- Do Plotting --------------- %%
for i = 1:length(vars)
    figure('Name',sprintf('Model Comparison | %s',vars{i}))
    ax = gca; box on; hold on;
    xlim(xrange)

    xlabel('Time [s]');
    try 
        title(vars{i});
    catch
        title(vars{i})
    end

    for j = 1:length(type)
        plot(plotvar.(desc{j}).Time,plotvar.(desc{j}).(vars{i}),'DisplayName',desc{j});
    end

    legend
end







% figure('Name','SS to Simulation Comparison')
% num_plot = 3;
% for k = 1:num_plot
%     subplot(num_plot,1,k)
%     ax = gca; box on; hold on;
%     xlabel('Time [s]')
%     xlim(xrange);
%     title(varnames{k})
% 
%     switch k
%         case 1
%            for i = 1:length(type)
%                plot(time{i},var1{i},'DisplayName',desc{i});
%            end
% 
%         case 2
%             for i = 1:length(type)
%                 plot(time{i},var2{i},'DisplayName',desc{i});
%             end
% 
%         case 3
%             for i = 1:length(type)
%                 plot(time{i},var3{i},'DisplayName',desc{i});
%             end
%         
%         case 4
%             for i = 1:length(type)
%                 plot(time{i},var4{i},'DisplayName',desc{i});
%             end
%     end
% 
%     legend
% end